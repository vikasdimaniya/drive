load_module modules/ngx_http_geoip2_module.so;

events {}

http {
    geoip2 /etc/nginx/GeoLite2-Country.mmdb {
        auto_reload 5m;
        $geoip2_data_country_iso_code country iso_code;
    }

    # ---------------------- Django Backends ----------------------
    upstream django_site1 {
        server site1-django:3000;
    }

    upstream django_site2 {
        server site2-django:3001;
    }

    # ---------------------- MinIO Backends ----------------------
    upstream minio_site1 {
        server site1-minio1-1:9000;
        server site1-minio2-1:9000;
        server site1-minio3-1:9000;
        server site1-minio4-1:9000;
    }

    upstream minio_site2 {
        server site2-minio1-1:9000;
        server site2-minio2-1:9000;
        server site2-minio3-1:9000;
        server site2-minio4-1:9000;
    }

    # ---------------------- GeoIP Routing ----------------------
    map $geoip2_data_country_iso_code $django_backend {
        default django_site1;
        US      django_site1;
        CA      django_site1;
        GB      django_site2;
        DE      django_site2;
        FR      django_site2;
    }

    map $geoip2_data_country_iso_code $minio_backend {
        default minio_site1;
        US      minio_site1;
        CA      minio_site1;
        GB      minio_site2;
        DE      minio_site2;
        FR      minio_site2;
    }

    # ---------------------- Main Server Configuration ----------------------
    server {
        listen 80;

        # Route `/s3/...` requests to MinIO based on GeoIP
        location /s3/ {
            proxy_pass http://$minio_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            # Support for MinIO API authentication
            proxy_set_header Authorization $http_authorization;
            proxy_pass_header Authorization;
        }

        # Route all other requests to Django based on GeoIP
        location / {
            proxy_pass http://$django_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }
}
